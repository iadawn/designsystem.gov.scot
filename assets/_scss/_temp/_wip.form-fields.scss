$max-input-size: 44px;
$input-size: 40px;
$input-shadow-size: #{($max-input-size - $input-size) /2};
$small-input-size: 24px;
$small-shadow-size: #{($max-input-size - $small-input-size) /2};
$small-input-offset: 8px;




@mixin radiocheckboxstates ($round: false, $small-pip-padding: 2px, $active-shadow-color: $color__input--active__background) {

    margin-bottom: 21px;
    margin-right: 25px;
    padding-left: 40px;
    position: relative;

    /**
     * [1] minimum height of input for WCAG AAA
     */
    &__input {
        height: $max-input-size; /* [1] */
        left: -2px;
        opacity: 0;
        position: absolute;
        top: -2px;
        width: $max-input-size;
    }

    &__label {
        display: inline-block;
        padding: 7px 15px;
    }

    &__label::before {
        border: 2px solid currentColor;
        content: '';
        height: $input-size;
        left: 0;
        position: absolute;
        top: 0;
        width: $input-size;
    }

    &__label::after {
        content: "";
        position: absolute;

        bottom: calc(100% - #{$input-size});
        left: 0;
        right: calc(100% - #{$input-size});
        top: 0;
        opacity: 0;

        background-color: $color__input--spot;
    }

    &__label::before,
    &__label::after {
        @if $round {
            border-radius: 50%;
        }
    }

    /* hover */
    &__label:hover::before {
        border-color: $color__input--hover__border;
        box-shadow: 0 0 0 $input-shadow-size $color__input--hover__border;
    }

    /* focus */
    &__input:focus + &__label::before {
        border-width: 4px;
        box-shadow: 0 0 0 $input-shadow-size $color__gold--base;
    }

    /* checked */
    &__input:checked + &__label::before {
        border-color: $color__input--spot;
    }

    &__input:checked + &__label::after {
        opacity: 1;
    }

    /* active */
    &__input:active + &__label::before {
        background-color: $color__input--active__background;
        border-color: $color__input--spot;
        box-shadow: 0 0 0 $input-shadow-size $active-shadow-color;
    }

    /*
     * [1] this negative margin makes the small checkboxes/radios align left with content
     */
    &--small {
        margin-bottom: 14px;
        margin-left: -8px; /* [1] */
    }

    &--small &__label::before {
        height: $small-input-size;
        left: $small-input-offset;
        top: $small-input-offset;
        width: $small-input-size;
    }

    &--small &__label::after {
        bottom: calc(100% - #{$small-input-size - $small-pip-padding + $small-input-offset});
        left: #{$small-pip-padding + $small-input-offset};
        right: calc(100% - #{$small-input-size - $small-pip-padding + $small-input-offset});
        top: #{$small-pip-padding + $small-input-offset};
    }

    /* hover */
    &--small &__label:hover::before {
        box-shadow: 0 0 0 $small-shadow-size $color__input--hover__border;
    }

    /* focus */
    &--small &__input:focus + &__label::before {
        box-shadow: 0 0 0 $small-shadow-size $color__input--focus__outline;
    }

    /* active */
    &--small &__input:active + &__label::before {
        box-shadow: 0 0 0 $small-shadow-size $active-shadow-color;
    }
}

.#{$pl_prefix}checkbox {
    @include radiocheckboxstates();

    &__label::after {
        -webkit-mask-image: url(/assets/images/icons/checkbox-40.svg);
        mask-image: url(/assets/images/icons/checkbox-40.svg);
    }
}

.#{$pl_prefix}radio {
    @include radiocheckboxstates(true, 1px, $color__input--spot);

    &__label::after {
        -webkit-mask-image: url(/assets/images/icons/radio-40.svg);
        mask-image: url(/assets/images/icons/radio-40.svg);
    }
}

/*******
*******/
.#{$pl_prefix}question {
    margin-bottom: 21px;

    &--error {
        border-left: 5px solid $color__red--base;
        padding-left: 20px;
    }

    &__message {
        font-weight: bold;
        margin-bottom: 14px;
    }

    &--error &__message {
        color: $color__red--base;
    }

    &--error .ds_radio__label::before,
    &--error .ds_checkbox__label::before,
    &--error input,
    &--error textarea {
        border-color: $color__red--base;
    }
}

/*******
*******/
.#{$pl_prefix}field-group {
    margin-top: 14px;
    margin-bottom: -21px;

    &--inline {
        display: flex;
        flex-direction: row;
    }
}

/*******
*******/
.#{$pl_prefix}reveal-content {
    display: none;
    margin-top: 14px;
    padding-left: 14px;
    position: relative;

    &::before {
        background-color: $color__grey--medium;
        bottom: 0;
        content: '';
        left: -22px;
        position: absolute;
        top: 0;
        width: 3px;
    }

    > :last-child {
        margin-bottom: 0;
    }
}

:checked ~ .#{$pl_prefix}reveal-content {
    display: block;
}

/*******
*******/
.#{$pl_prefix}input {
    border: 2px solid currentColor;
    border-radius: 0;
    display: block;
    margin-bottom: 21px;
    min-height: 49px;
    padding: 7px;
    width: 100%;

    &:hover {
        border-color: $color__input--hover__border;
        box-shadow: 0 0 0 $input-shadow-size $color__input--hover__border;
    }

    &:focus {
        background-color: $color__input--focus__background;
        border-color: $color__input--spot;
        border-width: 3px;
        box-shadow: 0 0 0 $input-shadow-size $color__input--focus__outline;
        outline: none;
        padding: 6px;
    }

    &__wrapper--has-icon {
        display: inline-block;
        position: relative;

        > .#{$pl_prefix}button {
            margin-top: 0;
            margin-bottom: 0;
            position: absolute;
            right: 0;
            top: 0;
        }

        > .#{$pl_prefix}input {
            padding-right: 56px;
        }
    }

    @supports (display: flex) {
        &__wrapper--has-icon {
            display: flex;

            > .#{$pl_prefix}button {
                margin-left: -49px;
                position: static;
            }
        }
    }
}

$fixed-widths: (2,3,4,5,10,20);
$fluid-widths: (
    'one-quarter' 25,
    'one-third' 33.333333,
    'half' 50,
    'two-thirds' 67.666667,
    'three-quarters' 75
);

@each $width in $fixed-widths {
    .#{$pl_prefix}input--fixed-#{$width} {
        max-width: #{($width + 1) * 1em};
    }
}

@include media-query(medium) {
    @each $width in $fluid-widths {
        $name:  nth($width, 1);
        $value: nth($width, 2);

        .#{$pl_prefix}input--fluid-#{$name} {
            max-width: #{($value) * 1%};
        }
    }
}


/*******
*******/
.#{$pl_prefix}label {
    display: inline-block;
    margin-bottom: 7px;
}
